@charset "utf-8";

$body-line-height: 1.3;

// Make "$black" true black because of OLED screens
$black: #000;

// @import "%PUBLIC_URL/AnkaCoder-C75-r.ttf"
// $family-monospace: "Anka Coder Narrow";

@import "~bulma/bulma.sass";
@import "~bulma-prefers-dark/bulma-prefers-dark.sass";
@import "~react-toastify/scss/main.scss";

// Indicate external links
a[href^="http://"]:after,
a[href^="https://"]:after {
  content: "↗️";
}

// minor fix, bc bulma .content doesnt cope well w divs
.outline-2,
.outline-3:first-child,
.outline-4:first-child,
.outline-5:first-child,
.outline-6:first-child {
  margin-top: $size-6;
}

// .outline-2,
// .outline-3,
// .outline-4,
// .outline-5,
// .outline-6 {
//   padding-top: $size-6;
// }

.outline-3 { border-left-color: #558; }
.outline-4 { border-left-color: #769; }
.outline-5 { border-left-color: #88a; }
.outline-6 { border-left-color: #99f; }

.outline-3,
.outline-4,
.outline-5,
.outline-6 {
  padding-left: 12px;
  margin-left: 3px;
  // padding-bottom: 1px;  // unexplainable magic effect
  padding-bottom: 12px;
  border-left-width: 3px;
  border-left-style: solid;
}

// // The first outline div at a given level
// h1+.outline-2,
// .outline-text-2+.outline-3,
// .outline-text-3+.outline-4,
// .outline-text-4+.outline-5,
// .outline-text-5+.outline-6 {
//   margin-top: $size-7;
// }

// The last outline div at a given level
.outline-2:last-of-type,
.outline-3:last-of-type,
.outline-4:last-of-type,
.outline-5:last-of-type,
.outline-6:last-of-type {
  padding-bottom: 0;
}

div+p,
div+h2,
div+h3,
div+h4,
div+h5,
div+h6 { margin-top: $size-7; }

ul {
  margin-top: $size-7;
  margin-bottom: $size-6;
}

// TODO: in .logseq divs, destyle headings.
// Though this wouldn't really be blind-readable compared to just replacing the
// heading tags for <p> tags.  IDK how the blind would best read lists with deep
// nesting, and how to explain the nesting thru aria.  2023-05-12: ok, in lieu
// of proper ul/li elements, we can use role="list" and role="listitem".
.logseq h2,h3,h4,h5,h6 {
  font-size: $size-normal;
  font-weight: $weight-normal;
  line-height: $body-line-height;
  margin-bottom: 1rem;
}


// Emacs exports src colors according to the color theme I had active, and I
// always use a dark theme.  So mandate that all src blocks have dark background
// (regardless of browser prefers-color-scheme), then it'll look fine.
pre.src {
  background: $grey-darker;
  color: $white-ter;
}

.broken-link {
  color: $danger;
}

.stub-link {
  color: $text;
}

.section a {
  text-decoration: underline;
}

#big-list th:hover {
  background: $grey-lighter;
  @media (prefers-color-scheme: dark) {
    background: $grey;
  }
}

#about-button {
  @media (prefers-color-scheme: dark) {
    filter: invert(1);
  }
}

// more real estate on phone
@media only screen and (max-width: $tablet) {
  article,
  .section {
    padding-left:  3px !important;
    padding-right: 3px !important;
    margin-right:  3px !important;
    margin-right:  3px !important;
  }
}
